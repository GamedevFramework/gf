/**

@namespace gf
@brief The namespace for gf classes

@namespace gf::literals
@brief The namespace for literals

@defgroup core Core
@brief All the core generic classes and functions.

## Using the `core` module

All the types and functions of the `core` module are defined in `libgfcore0`. In order to use this library, you should use `cmake` and add the following in your `CMakeLists.txt`:

~~~{.cmake}
find_package(gf REQUIRED COMPONENTS core)

# ...

target_link_libraries(mygame
  PRIVATE
    gf::core
)
~~~

@defgroup core_vocabulary Vocabulary
@ingroup core
@brief Vocabulary classes

@defgroup core_container Container
@ingroup core
@brief Various containers

@defgroup core_maths Maths
@ingroup core
@brief Maths classes and functions

@defgroup core_geometry Geometry
@ingroup core
@brief Geometry classes and functions

@defgroup core_color Colors
@ingroup core
@brief Colors handling

@defgroup core_models Models
@ingroup core
@brief Models

@defgroup core_messages Messages
@ingroup core
@brief Application messages

@defgroup core_procedural_generation Procedural Generation
@ingroup core
@brief Procedural generation utilities

@defgroup core_spatial Spatial
@ingroup core
@brief Spatial indexes

@defgroup core_animation Animation
@ingroup core
@brief Animation and tweening

@defgroup core_roguelike Roguelike Toolkit
@ingroup core
@brief Roguelike toolkit

@defgroup core_system System
@ingroup core
@brief System abstractions

@defgroup core_filesystem Filesystem
@ingroup core
@brief Filesystem related classes

@defgroup core_streams Streams
@ingroup core
@brief Input and output streams

@defgroup core_serialization Serialization
@ingroup core
@brief Serialization

@defgroup core_cells Cells
@ingroup core
@brief Cells handling related classes (orthogonal, hexagonal, staggered)

@defgroup core_utilities Utilities
@ingroup core
@brief Various game-related utilities

@defgroup core_strings String Utilities
@ingroup core
@brief String utilities

@defgroup core_tmx TMX (Tiled) Support
@ingroup core
@brief TMX (Tiled) support

gf supports TMX 1.5+. In particular, it does not support the old terrain element in favor of wang sets.

@defgroup graphics Graphics
@brief All the classes related to graphics

## Using the `graphics` module

All the types and functions of the `graphics` module are defined in `libgf0`. In order to use this library, you should use `cmake` and add the following in your `CMakeLists.txt`:

~~~{.cmake}
find_package(gf REQUIRED COMPONENTS graphics)

# ...

target_link_libraries(mygame
  PRIVATE
    gf::graphics
)
~~~

@defgroup graphics_events Input events
@ingroup graphics
@brief Input events and related classes

@defgroup graphics_window_monitor Window and monitor
@ingroup graphics
@brief Window and monitor

@defgroup graphics_devices Devices
@ingroup graphics
@brief Devices

@defgroup graphics_gpu GPU Resources
@ingroup graphics
@brief GPU Resources

@defgroup graphics_renderers Renderers
@ingroup graphics
@brief Renderers

@defgroup graphics_views Views
@ingroup graphics
@brief Views (cameras)

@defgroup graphics_drawables Drawables
@ingroup graphics
@brief Drawable objects

@defgroup graphics_sprite Sprite display
@ingroup graphics
@brief Sprite display

@defgroup graphics_text Text display
@ingroup graphics
@brief Text display

@defgroup graphics_shapes Shapes
@ingroup graphics
@brief Shapes

@defgroup graphics_curves Curves
@ingroup graphics
@brief Curves

@defgroup graphics_tiles Tiles and Tilelayers
@ingroup graphics
@brief Tiles and tilelayers

@defgroup graphics_light Lights
@ingroup graphics
@brief Lights

@defgroup graphics_particles Particles
@ingroup graphics
@brief Particles

@defgroup graphics_console Virtual console
@ingroup graphics
@brief Virtual console

@defgroup graphics_widgets Widgets
@ingroup graphics
@brief Widgets

@defgroup graphics_resources Resources
@ingroup graphics
@brief Resources and resource management

@defgroup graphics_entities Entities
@ingroup graphics
@brief Entities

@defgroup graphics_scenes Scenes
@ingroup graphics
@brief Scene creation and management

@defgroup graphics_post_proc Post-processing
@ingroup graphics
@brief Post-processing effects

@defgroup graphics_segues Segues
@ingroup graphics
@brief Segue effects


@defgroup net Network
@brief All the classes related to network

## Using the `net` module

All the types and functions of the `net` module are defined in `libgfnet0`. In order to use this library, you should use `cmake` and add the following in your `CMakeLists.txt`:

~~~{.cmake}
find_package(gf REQUIRED COMPONENTS net)

# ...

target_link_libraries(mygame
  PRIVATE
    gf::net
)
~~~


@defgroup net_sockets Network sockets
@ingroup net
@brief The classes related to socket handling

*/
/**

@mainpage

@tableofcontents

__Gamedev Framework (gf)__ is a framework to build 2D games in C++17. It is based on [SDL](https://www.libsdl.org/) and [OpenGL ES 2.0](https://www.khronos.org/opengles/2_X/), and presents an API that is very similar to the graphics module of [SFML](http://www.sfml-dev.org/) (see @ref differences_with_sfml) with additional features. It is _not_ a [game engine](https://en.wikipedia.org/wiki/Game_engine), it is more something like a framework, similar to [libGDX](https://libgdx.badlogicgames.com/) in the Java world.

Gamedev Framework (gf) is licensed under the terms and conditions of the [zlib/libpng license](https://opensource.org/licenses/Zlib).

@section index_first First example

@snippet snippets/doc_index.cc index

@section index_documentation Documentation

1. Introduction to gf
  - @ref features
  - @ref build_and_install
  - @ref use
  - @ref differences_with_sfml
  - @ref recommanded_libraries
2. Tutorials on gf
  - @ref gamedev_101
  - @ref start_game
3. User documentation (WIP)
  1. Core classes
    - @ref math
    - @ref vectors_matrices_transforms
    - @ref id
    - @ref singletons
    - @ref pcg
  2. Window classes
    - @ref events_controls_actions
  3. Graphics classes
    - @ref shader
  4. Game classes
    - @ref messages

@section source Source

The source code is available on [github](https://github.com/GamedevFramework/gf).



*/
