name: WindowsBuild

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  BUILD_TYPE: Release
  VCPKG_COMMIT: f14984af3738e69f197bf0e647a8dca12de92996
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}\vcpkg\binary-cache

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: vcpkg cache
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg-${{ env.VCPKG_COMMIT }}

      - uses: actions/checkout@v3
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        with:
          repository: Microsoft/vcpkg
          path: vcpkg
          ref: ${{ env.VCPKG_COMMIT }}

      - name: Install vcpkg dependencies
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}/vcpkg
        run: |
          echo $Env:VCPKG_DEFAULT_BINARY_CACHE
          mkdir $Env:VCPKG_DEFAULT_BINARY_CACHE
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install boost-algorithm:x64-windows boost-container:x64-windows boost-filesystem:x64-windows boost-heap:x64-windows freetype:x64-windows pugixml:x64-windows sdl2:x64-windows stb:x64-windows zlib:x64-windows

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        id: extract_branch

      - uses: actions/checkout@v3
        with:
          repository: GamedevFramework/gf
          submodules: recursive
          ref: ${{ steps.extract_branch.outputs.branch }}
          path: gf

      - name: Configure gf
        shell: cmd
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          cmake -DGF_USE_EMBEDDED_LIBS=OFF -DGF_BUILD_GAMES=OFF -DGF_BUILD_EXAMPLES=OFF -DGF_BUILD_DOCUMENTATION=OFF -DGF_DEBUG=OFF -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -S ${{ github.workspace }}/gf -B ${{ github.workspace }}/gf/build

      - name: Build gf
        shell: cmd
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          cmake --build ${{ github.workspace }}/gf/build --config ${{ env.BUILD_TYPE }} --parallel

      - name: Run tests
        shell: cmd
        working-directory: ${{ github.workspace }}/gf/build
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          ctest -j $(nproc) -C ${{ env.BUILD_TYPE }} --output-on-failure
